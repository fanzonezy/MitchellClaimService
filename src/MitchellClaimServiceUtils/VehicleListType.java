//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.27 at 01:43:04 AM PST 
//


package MitchellClaimServiceUtils;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VehicleListType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="VehicleListType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="VehicleDetails" type="{http://www.mitchell.com/examples/claim}VehicleInfoType" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VehicleListType", propOrder = {
    "vehicleDetails"
})
public class VehicleListType {

    @XmlElement(name = "VehicleDetails", required = true)
    protected List<VehicleInfoType> vehicleDetails;

    /**
     * Gets the value of the vehicleDetails property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the vehicleDetails property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVehicleDetails().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VehicleInfoType }
     * 
     * 
     */
    public List<VehicleInfoType> getVehicleDetails() {
        if (vehicleDetails == null) {
            vehicleDetails = new ArrayList<VehicleInfoType>();
        }
        return this.vehicleDetails;
    }

    /*** customized method to set the vehicle list ***/
    public void setVehicleDetails(List<VehicleInfoType> vehicleList){
    	if (vehicleDetails == null) {
    		vehicleDetails = new ArrayList<VehicleInfoType>();
    	}
    	this.vehicleDetails.addAll(vehicleList);
    }
    
    /**
     * customized method to verify the content
     */
    public boolean equals(VehicleListType other){
    	if (other == null || other.getClass() != getClass()) {
    		System.out.println("1");
			return false;
		}
    	
    	if (vehicleDetails.size() != other.getVehicleDetails().size()){
    		System.out.println("2");
    		return false;
    	}
    	
    	for (int i = 0; i < vehicleDetails.size(); i++){
    		if ( ! vehicleDetails.get(i).equals(other.getVehicleDetails().get(i))){
    			System.out.println("*********************************");
    			return false;
    			
    		}
    	}
    	
    	return true;
    }
    
    public void updateWithInstance(VehicleListType other){
    	for (VehicleInfoType newVehicle : other.vehicleDetails){
    		for (VehicleInfoType oldVehicle: vehicleDetails){
    			if (newVehicle.vin.equals(oldVehicle.vin)){
    				oldVehicle.updateWithInstance(newVehicle);
    				break;
    			}
    		}
    	}
    }
}
